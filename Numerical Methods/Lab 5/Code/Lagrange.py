import numpy as np
import matplotlib.pyplot as plt

plt.figure(figsize=(9, 6))

def f(x):
    return x*np.tan(x)

x = np.arange(-np.pi/3, np.pi/3, np.pi/15)
x = np.append(x, np.pi/3)
y = [f(x_i) for x_i in x]

plt.plot(x, y, "o", color = "red", markersize = 6)

def L(X):
    S0 = y[0]*((X-x[1])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[6])*(X-x[7])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[0]-x[1])*(x[0]-x[2])*(x[0]-x[3])*(x[0]-x[4])*(x[0]-x[5])*(x[0]-x[6])* (x[0]-x[7])*(x[0]-x[8])*(x[0]-x[9])*(x[0]-x[10]))
    S1 = y[1]*((X-x[0])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[6])*(X-x[7])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[1]-x[0])*(x[1]-x[2])*(x[1]-x[3])*(x[1]-x[4])*(x[1]-x[5])*(x[1]-x[6])* (x[1]-x[7])*(x[1]-x[8])*(x[1]-x[9])*(x[1]-x[10]))
    S2 = y[2]*((X-x[0])*(X-x[1])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[6])*(X-x[7])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[2]-x[0])*(x[2]-x[1])*(x[2]-x[3])*(x[2]-x[4])*(x[2]-x[5])*(x[2]-x[6])* (x[2]-x[7])*(x[2]-x[8])*(x[2]-x[9])*(x[2]-x[10]))
    S3 = y[3]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[4])*(X-x[5])*(X-x[6])*(X-x[7])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[3]-x[0])*(x[3]-x[1])*(x[3]-x[2])*(x[3]-x[4])*(x[3]-x[5])*(x[3]-x[6])* (x[3]-x[7])*(x[3]-x[8])*(x[3]-x[9])*(x[3]-x[10]))
    S4 = y[4]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[3])*(X-x[5])*(X-x[6])*(X-x[7])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[4]-x[0])*(x[4]-x[1])*(x[4]-x[2])*(x[4]-x[3])*(x[4]-x[5])*(x[4]-x[6])* (x[4]-x[7])*(x[4]-x[8])*(x[4]-x[9])*(x[4]-x[10]))
    S5 = y[5]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[6])*(X-x[7])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[5]-x[0])*(x[5]-x[1])*(x[5]-x[2])*(x[5]-x[3])*(x[5]-x[4])*(x[5]-x[6])* (x[5]-x[7])*(x[5]-x[8])*(x[5]-x[9])*(x[5]-x[10]))
    S6 = y[6]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[7])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[6]-x[0])*(x[6]-x[1])*(x[6]-x[2])*(x[6]-x[3])*(x[6]-x[4])*(x[6]-x[5])* (x[6]-x[7])*(x[6]-x[8])*(x[6]-x[9])*(x[6]-x[10]))
    S7 = y[7]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[6])* (X-x[8])*(X-x[9])*(X-x[10])) / ((x[7]-x[0])*(x[7]-x[1])*(x[7]-x[2])*(x[7]-x[3])*(x[7]-x[4])*(x[7]-x[5])* (x[7]-x[6])*(x[7]-x[8])*(x[7]-x[9])*(x[7]-x[10]))
    S8 = y[8]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[6])* (X-x[7])*(X-x[9])*(X-x[10])) / ((x[8]-x[0])*(x[8]-x[1])*(x[8]-x[2])*(x[8]-x[3])*(x[8]-x[4])*(x[8]-x[5])* (x[8]-x[6])*(x[8]-x[7])*(x[8]-x[9])*(x[8]-x[10]))
    S9 = y[9]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[6])* (X-x[7])*(X-x[8])*(X-x[10])) / ((x[9]-x[0])*(x[9]-x[1])*(x[9]-x[2])*(x[9]-x[3])*(x[9]-x[4])*(x[9]-x[5])* (x[9]-x[6])*(x[9]-x[7])*(x[9]-x[8])*(x[9]-x[10]))
    S10 = y[10]*((X-x[0])*(X-x[1])*(X-x[2])*(X-x[3])*(X-x[4])*(X-x[5])*(X-x[6])* (X-x[7])*(X-x[8])*(X-x[9])) / ((x[10]-x[0])*(x[10]-x[1])*(x[10]-x[2])*(x[10]-x[3])*(x[10]-x[4])* (x[10]-x[5])*(x[10]-x[6])*(x[10]-x[7])*(x[10]-x[8])*(x[10]-x[9]))

    return S0 + S1 + S2 + S3 + S4 + S5 + S6 + S7 + S8 + S9 + S10

X_rez = np.arange(-np.pi/3, np.pi/3, 0.01)
Y_rez = [L(x_i) for x_i in X_rez]

plt.grid()
plt.axis("equal")
plt.plot(X_rez, Y_rez, color = "blue")
